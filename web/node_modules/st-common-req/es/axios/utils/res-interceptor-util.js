import { ErrResCodeDescConst as u } from "../../res/consts/err-res-code-desc-const.js";
import { ErrResTipConst as r } from "../../res/consts/err-res-tip-const.js";
const f = (t) => t, o = (t, n) => (n.message = t, Promise.reject(n)), p = (t, n = f, l = o) => (t.interceptors.response.use(
  // 对于成功的请求响应的处理，即成功收到服务端的响应，且是成功的响应
  (e) => n(e.data, e.headers, e.status),
  // 对于失败的请求响应的处理，即发生错误的请求响应的处理
  (e) => {
    let s = "";
    if (e && e.response) {
      for (let i in u) {
        let a = Number.parseInt(i);
        if (e.response.status === a) {
          s = u[a];
          break;
        }
      }
      s === "" && (s = r.CONNECT_FAILED + "，错误响应状态码：" + e.response.status);
    } else
      e.message.includes("timeout") ? s = r.TIMEOUT : s = r.CONNECT_FAILED;
    return l(s, e);
  }
), t);
export {
  p as addRespInterceptor
};
