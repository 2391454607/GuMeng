/**
 * 小尾巴气泡组件中子内容区域相对于组件根元素的相对位置<br/>
 */
export declare enum StPopoverSubContPosEnum {
    /**
     * 左上
     * @type {StPopoverSubContPosEnum.LT}
     */
    LT = "LT",
    /**
     * 左下
     * @type {StPopoverSubContPosEnum.LB}
     */
    LB = "LB",
    /**
     * 右上
     * @type {StPopoverSubContPosEnum.RT}
     */
    RT = "RT",
    /**
     * 右下
     * @type {StPopoverSubContPosEnum.RB}
     */
    RB = "RB",
    /**
     * 上左
     * @type {StPopoverSubContPosEnum.TL}
     */
    TL = "TL",
    /**
     * 上右
     * @type {StPopoverSubContPosEnum.TR}
     */
    TR = "TR",
    /**
     * 下左
     * @type {StPopoverSubContPosEnum.BL}
     */
    BL = "BL",
    /**
     * 下右
     * @type {StPopoverSubContPosEnum.BR}
     */
    BR = "BR"
}
/**
 * 小尾巴气泡组件中子内容区域相对于组件根元素的相对位置对象组成的对象，
 * 其中，相对位置对象的 key 为 {@link StPopoverSubContPosEnum}
 * 的枚举值，相对位置对象中包含子内容区域相对于组件根元素的相对位置以及
 * 子内容区域出现时过渡效果变换的原点位置
 */
export declare const StPopoverSubContPosConst: {
    readonly LT: {
        readonly position: {
            readonly right: "100%";
            readonly top: 0;
            readonly transformOrigin: "right top";
        };
    };
    readonly LB: {
        readonly position: {
            readonly right: "100%";
            readonly bottom: 0;
            readonly transformOrigin: "right bottom";
        };
    };
    readonly RT: {
        readonly position: {
            readonly left: "100%";
            readonly top: 0;
            readonly transformOrigin: "left top";
        };
    };
    readonly RB: {
        readonly position: {
            readonly left: "100%";
            readonly bottom: 0;
            readonly transformOrigin: "left bottom";
        };
    };
    readonly TL: {
        readonly position: {
            readonly bottom: "100%";
            readonly left: 0;
            readonly transformOrigin: "bottom left";
        };
    };
    readonly TR: {
        readonly position: {
            readonly bottom: "100%";
            readonly right: 0;
            readonly transformOrigin: "bottom right";
        };
    };
    readonly BL: {
        readonly position: {
            readonly top: "100%";
            readonly left: 0;
            readonly transformOrigin: "top left";
        };
    };
    readonly BR: {
        readonly position: {
            readonly top: "100%";
            readonly right: 0;
            readonly transformOrigin: "top right";
        };
    };
};
