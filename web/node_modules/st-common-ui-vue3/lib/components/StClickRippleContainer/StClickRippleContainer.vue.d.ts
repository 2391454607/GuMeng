declare function __VLS_template(): {
    slots: {
        default?(_: {}): any;
    };
    refs: {};
    attrs: Partial<{}>;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<{
    width?: string | number;
    height?: string | number;
    speed?: number;
    rippleColor?: string;
    rippleColorRandom?: boolean;
    rippleMaxSize?: number | string;
    rippleWidth?: number | string;
    rippleInitialOpacity?: number;
    rippleZIndex?: number | string;
    rippleOverflowHidden?: boolean;
    click?: boolean;
    enter?: boolean;
    leave?: boolean;
}, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<{
    width?: string | number;
    height?: string | number;
    speed?: number;
    rippleColor?: string;
    rippleColorRandom?: boolean;
    rippleMaxSize?: number | string;
    rippleWidth?: number | string;
    rippleInitialOpacity?: number;
    rippleZIndex?: number | string;
    rippleOverflowHidden?: boolean;
    click?: boolean;
    enter?: boolean;
    leave?: boolean;
}> & Readonly<{}>, {
    width: string | number;
    height: string | number;
    click: boolean;
    speed: number;
    enter: boolean;
    leave: boolean;
    rippleColor: string;
    rippleColorRandom: boolean;
    rippleMaxSize: number | string;
    rippleWidth: number | string;
    rippleInitialOpacity: number;
    rippleZIndex: number | string;
    rippleOverflowHidden: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
