declare function __VLS_template(): {
    slots: {
        suffix?(_: {
            isInitial: unknown;
            isChange: unknown;
            enterIdx: unknown;
            leaveIdx: unknown;
            currentIdx: unknown;
        }): any;
    };
    refs: {};
    attrs: Partial<{}>;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<{
    idx: number;
    bgImgSrc?: string;
    title?: string;
    desc?: string;
    color?: string;
    animationSpeed?: number | string;
    titleEnterDelay?: number | string;
    descEnterDelay?: number | string;
    titleMaxLine?: number;
    descMaxLine?: number;
}, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<{
    idx: number;
    bgImgSrc?: string;
    title?: string;
    desc?: string;
    color?: string;
    animationSpeed?: number | string;
    titleEnterDelay?: number | string;
    descEnterDelay?: number | string;
    titleMaxLine?: number;
    descMaxLine?: number;
}> & Readonly<{}>, {
    title: string;
    desc: string;
    color: string;
    bgImgSrc: string;
    animationSpeed: number | string;
    titleEnterDelay: number | string;
    descEnterDelay: number | string;
    titleMaxLine: number;
    descMaxLine: number;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
