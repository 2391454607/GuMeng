declare function __VLS_template(): {
    slots: {
        img?(_: {}): any;
        title?(_: {}): any;
        content?(_: {}): any;
    };
    refs: {};
    attrs: Partial<{}>;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<{
    width?: string | number;
    height?: string | number;
    padding?: string | number;
    imgSrc?: string;
    imgWidth?: string | number;
    imgHeight?: string | number;
    imgSizeHover?: string | number;
    imgFillMode?: "cover" | "contain" | "none" | "scale-down";
    imgPosition?: string;
    imgSpeed?: number | string;
    imgDelay?: number | string;
    title?: string;
    titleFontSize?: string | number;
    content?: string;
    contentSpeed?: number | string;
    contentDelay?: number | string;
}, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<{
    width?: string | number;
    height?: string | number;
    padding?: string | number;
    imgSrc?: string;
    imgWidth?: string | number;
    imgHeight?: string | number;
    imgSizeHover?: string | number;
    imgFillMode?: "cover" | "contain" | "none" | "scale-down";
    imgPosition?: string;
    imgSpeed?: number | string;
    imgDelay?: number | string;
    title?: string;
    titleFontSize?: string | number;
    content?: string;
    contentSpeed?: number | string;
    contentDelay?: number | string;
}> & Readonly<{}>, {
    title: string;
    width: string | number;
    height: string | number;
    content: string;
    padding: string | number;
    imgSrc: string;
    imgWidth: string | number;
    imgHeight: string | number;
    imgFillMode: "cover" | "contain" | "none" | "scale-down";
    imgPosition: string;
    imgSpeed: number | string;
    imgDelay: number | string;
    titleFontSize: string | number;
    contentSpeed: number | string;
    contentDelay: number | string;
    imgSizeHover: string | number;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
