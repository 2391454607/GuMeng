import { e as p, p as d, i as u, n as m, a as v, b as h } from "./update-swiper.js";
import { d as E } from "./swiper-core.js";
function b(n, i) {
  n === void 0 && (n = {});
  const t = {
    on: {}
  }, o = {}, r = {};
  p(t, E), t._emitClasses = !0, t.init = !1;
  const e = {}, s = d.map((a) => a.replace(/_/, "")), l = Object.assign({}, n);
  return Object.keys(l).forEach((a) => {
    typeof n[a] > "u" || (s.indexOf(a) >= 0 ? u(n[a]) ? (t[a] = {}, r[a] = {}, p(t[a], n[a]), p(r[a], n[a])) : (t[a] = n[a], r[a] = n[a]) : a.search(/on[A-Z]/) === 0 && typeof n[a] == "function" ? t.on[`${a[2].toLowerCase()}${a.substr(3)}`] = n[a] : e[a] = n[a]);
  }), ["navigation", "pagination", "scrollbar"].forEach((a) => {
    t[a] === !0 && (t[a] = {}), t[a] === !1 && delete t[a];
  }), {
    params: t,
    passedParams: r,
    rest: e,
    events: o
  };
}
function S(n, i) {
  let {
    el: t,
    nextEl: o,
    prevEl: r,
    paginationEl: e,
    scrollbarEl: s,
    swiper: l
  } = n;
  m(i) && o && r && (l.params.navigation.nextEl = o, l.originalParams.navigation.nextEl = o, l.params.navigation.prevEl = r, l.originalParams.navigation.prevEl = r), v(i) && e && (l.params.pagination.el = e, l.originalParams.pagination.el = e), h(i) && s && (l.params.scrollbar.el = s, l.originalParams.scrollbar.el = s), l.init(t);
}
function _(n, i, t, o, r) {
  const e = [];
  if (!i) return e;
  const s = (a) => {
    e.indexOf(a) < 0 && e.push(a);
  };
  if (t && o) {
    const a = o.map(r), c = t.map(r);
    a.join("") !== c.join("") && s("children"), o.length !== t.length && s("children");
  }
  return d.filter((a) => a[0] === "_").map((a) => a.replace(/_/, "")).forEach((a) => {
    if (a in n && a in i)
      if (u(n[a]) && u(i[a])) {
        const c = Object.keys(n[a]), g = Object.keys(i[a]);
        c.length !== g.length ? s(a) : (c.forEach((f) => {
          n[a][f] !== i[a][f] && s(a);
        }), g.forEach((f) => {
          n[a][f] !== i[a][f] && s(a);
        }));
      } else n[a] !== i[a] && s(a);
  }), e;
}
const C = (n) => {
  !n || n.destroyed || !n.params.virtual || n.params.virtual && !n.params.virtual.enabled || (n.updateSlides(), n.updateProgress(), n.updateSlidesClasses(), n.parallax && n.params.parallax && n.params.parallax.enabled && n.parallax.setTranslate());
};
export {
  _ as a,
  b as g,
  S as m,
  C as u
};
