import { getCurrentScope as g, onScopeDispose as p, unref as v, onMounted as w, nextTick as y, ref as b, watch as S, customRef as h, getCurrentInstance as O } from "vue";
function I(t, e) {
  let n, o, u;
  const i = b(!0), c = () => {
    i.value = !0, u();
  };
  S(t, c, { flush: "sync" });
  const l = typeof e == "function" ? e : e.get, s = typeof e == "function" ? void 0 : e.set, r = h((a, d) => (o = a, u = d, {
    get() {
      return i.value && (n = l(n), i.value = !1), o(), n;
    },
    set(f) {
      s == null || s(f);
    }
  }));
  return Object.isExtensible(r) && (r.trigger = c), r;
}
function T(t) {
  return g() ? (p(t), !0) : !1;
}
function A(t) {
  return typeof t == "function" ? t() : v(t);
}
const m = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
const M = (t) => t != null, C = Object.prototype.toString, P = (t) => C.call(t) === "[object Object]", W = () => {
}, D = /* @__PURE__ */ j();
function j() {
  var t, e;
  return m && ((t = window == null ? void 0 : window.navigator) == null ? void 0 : t.userAgent) && (/iP(?:ad|hone|od)/.test(window.navigator.userAgent) || ((e = window == null ? void 0 : window.navigator) == null ? void 0 : e.maxTouchPoints) > 2 && /iPad|Macintosh/.test(window == null ? void 0 : window.navigator.userAgent));
}
function k(t) {
  return O();
}
function G(t, e = !0, n) {
  k() ? w(t, n) : e ? t() : y(t);
}
export {
  I as computedWithControl,
  I as controlledComputed,
  k as getLifeCycleTarget,
  m as isClient,
  D as isIOS,
  P as isObject,
  W as noop,
  M as notNullish,
  A as toValue,
  G as tryOnMounted,
  T as tryOnScopeDispose
};
