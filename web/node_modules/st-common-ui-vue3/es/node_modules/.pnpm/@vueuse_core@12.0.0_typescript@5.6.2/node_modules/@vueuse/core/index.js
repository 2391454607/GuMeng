import { noop as I, isIOS as z, toValue as y, isObject as B, tryOnScopeDispose as M, tryOnMounted as S, isClient as _, notNullish as N, computedWithControl as F } from "../../../../@vueuse_shared@12.0.0_typescript@5.6.2/node_modules/@vueuse/shared/index.js";
import { getLifeCycleTarget as ne } from "../../../../@vueuse_shared@12.0.0_typescript@5.6.2/node_modules/@vueuse/shared/index.js";
import { watch as A, ref as g, computed as R, shallowRef as H, watchEffect as $, getCurrentInstance as T, onUpdated as V, onMounted as P } from "vue";
const O = _ ? window : void 0;
function w(t) {
  var e;
  const o = y(t);
  return (e = o == null ? void 0 : o.$el) != null ? e : o;
}
function x(...t) {
  let e, o, r, a;
  if (typeof t[0] == "string" || Array.isArray(t[0]) ? ([o, r, a] = t, e = O) : [e, o, r, a] = t, !e)
    return I;
  Array.isArray(o) || (o = [o]), Array.isArray(r) || (r = [r]);
  const c = [], d = () => {
    c.forEach((f) => f()), c.length = 0;
  }, u = (f, n, i, v) => (f.addEventListener(n, i, v), () => f.removeEventListener(n, i, v)), m = A(
    () => [w(e), y(a)],
    ([f, n]) => {
      if (d(), !f)
        return;
      const i = B(n) ? { ...n } : n;
      c.push(
        ...o.flatMap((v) => r.map((b) => u(f, v, b, i)))
      );
    },
    { immediate: !0, flush: "post" }
  ), h = () => {
    m(), d();
  };
  return M(h), h;
}
let L = !1;
function G(t, e, o = {}) {
  const { window: r = O, ignore: a = [], capture: c = !0, detectIframe: d = !1 } = o;
  if (!r)
    return I;
  z && !L && (L = !0, Array.from(r.document.body.children).forEach((s) => s.addEventListener("click", I)), r.document.documentElement.addEventListener("click", I));
  let u = !0;
  const m = (s) => y(a).some((l) => {
    if (typeof l == "string")
      return Array.from(r.document.querySelectorAll(l)).some((p) => p === s.target || s.composedPath().includes(p));
    {
      const p = w(l);
      return p && (s.target === p || s.composedPath().includes(p));
    }
  });
  function h(s) {
    const l = y(s);
    return l && l.$.subTree.shapeFlag === 16;
  }
  function f(s, l) {
    const p = y(s), E = p.$.subTree && p.$.subTree.children;
    return E == null || !Array.isArray(E) ? !1 : E.some((C) => C.el === l.target || l.composedPath().includes(C.el));
  }
  const n = (s) => {
    const l = w(t);
    if (s.target != null && !(!(l instanceof Element) && h(t) && f(t, s)) && !(!l || l === s.target || s.composedPath().includes(l))) {
      if (s.detail === 0 && (u = !m(s)), !u) {
        u = !0;
        return;
      }
      e(s);
    }
  };
  let i = !1;
  const v = [
    x(r, "click", (s) => {
      i || (i = !0, setTimeout(() => {
        i = !1;
      }, 0), n(s));
    }, { passive: !0, capture: c }),
    x(r, "pointerdown", (s) => {
      const l = w(t);
      u = !m(s) && !!(l && !s.composedPath().includes(l));
    }, { passive: !0 }),
    d && x(r, "blur", (s) => {
      setTimeout(() => {
        var l;
        const p = w(t);
        ((l = r.document.activeElement) == null ? void 0 : l.tagName) === "IFRAME" && !(p != null && p.contains(r.document.activeElement)) && e(s);
      }, 0);
    })
  ].filter(Boolean);
  return () => v.forEach((s) => s());
}
function q() {
  const t = g(!1), e = T();
  return e && P(() => {
    t.value = !0;
  }, e), t;
}
function W(t) {
  const e = q();
  return R(() => (e.value, !!t()));
}
function Q(t, e, o = {}) {
  const { window: r = O, ...a } = o;
  let c;
  const d = W(() => r && "MutationObserver" in r), u = () => {
    c && (c.disconnect(), c = void 0);
  }, m = R(() => {
    const i = y(t), v = (Array.isArray(i) ? i : [i]).map(w).filter(N);
    return new Set(v);
  }), h = A(
    () => m.value,
    (i) => {
      u(), d.value && i.size && (c = new MutationObserver(e), i.forEach((v) => c.observe(v, a)));
    },
    { immediate: !0, flush: "post" }
  ), f = () => c == null ? void 0 : c.takeRecords(), n = () => {
    h(), u();
  };
  return M(n), {
    isSupported: d,
    stop: n,
    takeRecords: f
  };
}
function U(t, e = {}) {
  const { window: o = O } = e, r = W(() => o && "matchMedia" in o && typeof o.matchMedia == "function");
  let a;
  const c = g(!1), d = (h) => {
    c.value = h.matches;
  }, u = () => {
    a && ("removeEventListener" in a ? a.removeEventListener("change", d) : a.removeListener(d));
  }, m = $(() => {
    r.value && (u(), a = o.matchMedia(y(t)), "addEventListener" in a ? a.addEventListener("change", d) : a.addListener(d), c.value = a.matches);
  });
  return M(() => {
    m(), u(), a = void 0;
  }), c;
}
function Y(t) {
  const e = T(), o = F(
    () => null,
    () => e.proxy.$el
  );
  return V(o.trigger), P(o.trigger), o;
}
function k(t, e, o = {}) {
  const { window: r = O, ...a } = o;
  let c;
  const d = W(() => r && "ResizeObserver" in r), u = () => {
    c && (c.disconnect(), c = void 0);
  }, m = R(() => {
    const n = y(t);
    return Array.isArray(n) ? n.map((i) => w(i)) : [w(n)];
  }), h = A(
    m,
    (n) => {
      if (u(), d.value && r) {
        c = new ResizeObserver(e);
        for (const i of n)
          i && c.observe(i, a);
      }
    },
    { immediate: !0, flush: "post" }
  ), f = () => {
    u(), h();
  };
  return M(f), {
    isSupported: d,
    stop: f
  };
}
function J(t, e = {}) {
  const {
    reset: o = !0,
    windowResize: r = !0,
    windowScroll: a = !0,
    immediate: c = !0,
    updateTiming: d = "sync"
  } = e, u = g(0), m = g(0), h = g(0), f = g(0), n = g(0), i = g(0), v = g(0), b = g(0);
  function s() {
    const p = w(t);
    if (!p) {
      o && (u.value = 0, m.value = 0, h.value = 0, f.value = 0, n.value = 0, i.value = 0, v.value = 0, b.value = 0);
      return;
    }
    const E = p.getBoundingClientRect();
    u.value = E.height, m.value = E.bottom, h.value = E.left, f.value = E.right, n.value = E.top, i.value = E.width, v.value = E.x, b.value = E.y;
  }
  function l() {
    d === "sync" ? s() : d === "next-frame" && requestAnimationFrame(() => s());
  }
  return k(t, l), A(() => w(t), (p) => !p && l()), Q(t, l, {
    attributeFilter: ["style", "class"]
  }), a && x("scroll", l, { capture: !0, passive: !0 }), r && x("resize", l, { passive: !0 }), S(() => {
    c && l();
  }), {
    height: u,
    bottom: m,
    left: h,
    right: f,
    top: n,
    width: i,
    x: v,
    y: b,
    update: l
  };
}
function K(t, e = { width: 0, height: 0 }, o = {}) {
  const { window: r = O, box: a = "content-box" } = o, c = R(() => {
    var n, i;
    return (i = (n = w(t)) == null ? void 0 : n.namespaceURI) == null ? void 0 : i.includes("svg");
  }), d = g(e.width), u = g(e.height), { stop: m } = k(
    t,
    ([n]) => {
      const i = a === "border-box" ? n.borderBoxSize : a === "content-box" ? n.contentBoxSize : n.devicePixelContentBoxSize;
      if (r && c.value) {
        const v = w(t);
        if (v) {
          const b = v.getBoundingClientRect();
          d.value = b.width, u.value = b.height;
        }
      } else if (i) {
        const v = Array.isArray(i) ? i : [i];
        d.value = v.reduce((b, { inlineSize: s }) => b + s, 0), u.value = v.reduce((b, { blockSize: s }) => b + s, 0);
      } else
        d.value = n.contentRect.width, u.value = n.contentRect.height;
    },
    o
  );
  S(() => {
    const n = w(t);
    n && (d.value = "offsetWidth" in n ? n.offsetWidth : e.width, u.value = "offsetHeight" in n ? n.offsetHeight : e.height);
  });
  const h = A(
    () => w(t),
    (n) => {
      d.value = n ? e.width : 0, u.value = n ? e.height : 0;
    }
  );
  function f() {
    m(), h();
  }
  return {
    width: d,
    height: u,
    stop: f
  };
}
function X(t = Y()) {
  const e = H(), o = () => {
    const r = w(t);
    r && (e.value = r.parentElement);
  };
  return S(o), A(() => y(t), o), e;
}
function Z(t = {}) {
  const {
    window: e = O,
    initialWidth: o = Number.POSITIVE_INFINITY,
    initialHeight: r = Number.POSITIVE_INFINITY,
    listenOrientation: a = !0,
    includeScrollbar: c = !0,
    type: d = "inner"
  } = t, u = g(o), m = g(r), h = () => {
    e && (d === "outer" ? (u.value = e.outerWidth, m.value = e.outerHeight) : c ? (u.value = e.innerWidth, m.value = e.innerHeight) : (u.value = e.document.documentElement.clientWidth, m.value = e.document.documentElement.clientHeight));
  };
  if (h(), S(h), x("resize", h, { passive: !0 }), a) {
    const f = U("(orientation: portrait)");
    A(f, () => h());
  }
  return { width: u, height: m };
}
export {
  F as computedWithControl,
  F as controlledComputed,
  O as defaultWindow,
  ne as getLifeCycleTarget,
  _ as isClient,
  z as isIOS,
  B as isObject,
  I as noop,
  N as notNullish,
  G as onClickOutside,
  y as toValue,
  S as tryOnMounted,
  M as tryOnScopeDispose,
  w as unrefElement,
  Y as useCurrentElement,
  J as useElementBounding,
  K as useElementSize,
  x as useEventListener,
  U as useMediaQuery,
  q as useMounted,
  Q as useMutationObserver,
  X as useParentElement,
  k as useResizeObserver,
  W as useSupported,
  Z as useWindowSize
};
